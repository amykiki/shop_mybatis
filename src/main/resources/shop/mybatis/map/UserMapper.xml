<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shop.mybatis.map.UserMapper">
    <resultMap id="addressmap" type="Address">
        <id property="id" column="t_addr_id"/>
        <result property="recipient" column="recipient"/>
        <result property="addressInfo" column="address_info"/>
        <result property="phone" column="phone"/>
        <result property="zip" column="zip"/>
    </resultMap>
    <resultMap id="usermap" type="User">
        <id column="t_user_id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="role" property="role"/>
        <collection property="addresses" ofType="Address" resultMap="addressmap"/>
    </resultMap>
    <select id="load" parameterType="int" resultMap="usermap">
        SELECT *, t1.id as t_user_id, t2.id as t_addr_id
        FROM t_user t1 LEFT JOIN t_address t2 ON t1.id = t2.user_id
        WHERE t1.id = #{id}
        ORDER BY t2.id
    </select>

    <select id="loadByName" parameterType="string" resultMap="usermap">
        SELECT *, t1.id as t_user_id, t2.id as t_addr_id
        FROM t_user t1 LEFT JOIN t_address t2 ON t1.id = t2.user_id
        WHERE t1.username = #{username}
        ORDER BY t2.id
    </select>

    <insert id="add" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_user
        VALUES (NULL, #{username}, #{password}, #{nickname}, #{role})
    </insert>

    <delete id="delete" parameterType="int">
        DELETE FROM t_user WHERE id = #{id}
    </delete>

    <sql id="inList">
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </sql>
    <delete id="deleteLists">
        DELETE FROM t_user WHERE id in
        <include refid="inList"/>
    </delete>

    <update id="update" parameterType="User">
        UPDATE t_user
        <set>
            <if test="password != null">password=#{password},</if>
            <if test="nickname != null">nickname=#{nickname},</if>
            <if test="role != null">role=#{role}</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateAuth" parameterType="map">
        UPDATE t_user
        <set>
            <if test="role != null">role=#{role}</if>
        </set>
        WHERE id IN
        <include refid="inList"/>
    </update>

    <select id="loadLists" resultType="User">
        SELECT * FROM t_user;
    </select>

    <sql id="findWhere">
        <where>
            <if test="username != null and _parameter.get(username) != '' ">
                username LIKE concat('%', #{username}, '%')
            </if>
            <if test="nickname != null and _parameter.get(nickname) != '' ">
                AND nickname LIKE concat('%', #{nickname}, '%')
            </if>
            <if test="role != null">
                AND role = #{role}
            </if>
        </where>
    </sql>

    <select id="find" parameterType="map" resultType="User">
        SELECT * FROM t_user
        <include refid="findWhere"/>
        LIMIT #{offset}, #{pageLimit}
    </select>

    <select id="findCount" parameterType="map" resultType="int">
        SELECT count(*) FROM t_user
        <include refid="findWhere"/>
    </select>
    
</mapper>